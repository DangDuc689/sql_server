
CREATE DATABASE QUANLYSINHVIEN_0525
GO

USE QUANLYSINHVIEN_0525
GO


CREATE TABLE LOP(
    MALOP VARCHAR(7) NOT NULL,
    TENLOP NVARCHAR(50),
    SISO INT
    CHECK(SISO > 0)
)		
GO


CREATE TABLE MONHOC(
    MAMH VARCHAR(6) NOT NULL,
    TENMH NVARCHAR(50),
    TCLT INT,
    TCTH INT,
    CHECK (TCLT > 0),
    CHECK (TCTH >= 0)
)
GO


CREATE TABLE SINHVIEN(
    MSSV VARCHAR(6) NOT NULL,
    HOTEN NVARCHAR(50),
    NTNS DATE,
    PHAI BIT,
    MALOP VARCHAR(7) 
)
GO


CREATE TABLE DIEMSV(
    MSSV VARCHAR(6) NOT NULL,
    MAMH VARCHAR(6) NOT NULL,
    DIEM DECIMAL(3, 1) 
)
GO


ALTER TABLE LOP ADD CONSTRAINT PK_LOP PRIMARY KEY (MALOP);
GO


ALTER TABLE MONHOC ADD CONSTRAINT PK_MONHOC PRIMARY KEY (MAMH);
GO


ALTER TABLE SINHVIEN ADD CONSTRAINT PK_SV PRIMARY KEY (MSSV),
						 CONSTRAINT FK_SV_LOP FOREIGN KEY (MALOP) REFERENCES LOP(MALOP);
GO


ALTER TABLE DIEMSV ADD CONSTRAINT PK_DIEMSV PRIMARY KEY (MSSV, MAMH),
					   CONSTRAINT FK_DIEMSV_SV FOREIGN KEY (MSSV) REFERENCES SINHVIEN(MSSV),
					   CONSTRAINT FK_DIEMSV_MONHOC FOREIGN KEY (MAMH) REFERENCES MONHOC(MAMH);
GO


INSERT INTO LOP (MALOP, TENLOP, SISO) VALUES
('18DTH01', N'CNTT Khóa 18, Lớp 1', 50),
('18DTH02', N'CNTT Khóa 18, Lớp 2', 45),
('19DTH01', N'CNTT Khóa 19, Lớp 1', 55),
('19DTH02', N'CNTT Khóa 19, Lớp 2', 50),
('19DTH03', N'CNTT Khóa 19, Lớp 3', 40)
GO


INSERT INTO MONHOC (MAMH, TENMH, TCLT, TCTH) VALUES
('COS201', N'Kỹ thuật lập trình', 2, 1),
('COS202', N'Lý thuyết đồ thị', 2, 1),
('COS203', N'CSDL và quản trị CSDL', 3, 0),
('COS204', N'Phân tích thiết kế hệ thống', 3, 0),
('COS205', N'CSDL phân tán', 3, 0)
GO


INSERT INTO SINHVIEN (MSSV, HOTEN, NTNS, PHAI, MALOP) VALUES
('170001', N'Lê Hoài An', '1999-10-12', 1, '18DTH01'),
('180002', N'Nguyễn Thị Hòa Bình', '2000-11-20', 1, '18DTH01'),
('180003', N'Phạm Tường Châu', '2000-06-07', 0, '18DTH02'),
('180004', N'Trần Công Danh', '2000-01-31', 0, '19DTH01')
GO


INSERT INTO DIEMSV (MSSV, MAMH, DIEM) VALUES
('170001', 'COS201', 10),
('170001', 'COS202', 10),
('170001', 'COS203', 10),
('170001', 'COS204', 10),
('170001', 'COS205', 10),
('180002', 'COS201', 3.5),
('180002', 'COS202', 7),
('180003', 'COS201', 8.5),
('180003', 'COS202', 2),
('180003', 'COS203', 6.5),
('180004', 'COS201', 8),
('180004', 'COS204', NULL) 

-- Truy vấn dữ liệu

-- 1. Thêm một dòng vào bảng SINHVIEN
INSERT INTO SINHVIEN (MSSV, HOTEN, NTNS, PHAI, MALOP) 
VALUES ('180031', N'Nguyễn Thị Hoa Lan', '2002-05-02', 0, '18DTH02')
GO

-- 2. Đổi tên môn học "Lý thuyết đồ thị" thành "Toán Rời Rạc"
UPDATE MONHOC
SET TENMH = N'Toán Rời Rạc'
WHERE TENMH = N'Lý thuyết đồ thị'
GO

-- 3. Hiển thị các môn học không thực hành
SELECT MAMH, TENMH, TCLT, TCTH
FROM MONHOC
WHERE TCTH = 0
GO

-- 4. Hiển thị tên các môn học vừa có lý thuyết vừa có thực hành
SELECT MAMH, TENMH, TCLT, TCTH
FROM MONHOC
WHERE TCLT > 0 AND TCTH > 0
GO

-- 5. In ra tên các môn học có ký tự đầu tên là chữ 'C'
SELECT MAMH, TENMH
FROM MONHOC
WHERE TENMH LIKE N'C%'
GO

-- 6. Liệt kê thông tin những sinh viên có họ chứa chữ "Thị"
SELECT MSSV, HOTEN, NTNS, PHAI, MALOP
FROM SINHVIEN
WHERE HOTEN LIKE N'%Thị%'
GO

-- 7. In ra 2 lớp có sĩ số đông nhất 
SELECT TOP 2 MALOP, TENLOP, SISO
FROM LOP
ORDER BY SISO DESC
GO

-- 8. In danh sách SV theo thứ tự: MSSV, Họ tên SV, Ngày sinh, Phái (Nam/Nữ)
SELECT MSSV, HOTEN, NTNS, 
       CASE PHAI WHEN 1 THEN N'Nam' ELSE N'Nữ' END AS PHAI
FROM SINHVIEN
ORDER BY MSSV ASC
GO

-- 9. Cho biết thông tin sinh viên có tuổi >= 20
SELECT HOTEN, NTNS, (2025 - YEAR(NTNS)) AS TUOI
FROM SINHVIEN
WHERE YEAR(NTNS) <= 2005
GO

-- 10. Liệt kê tên các môn học SV đã dự thi nhưng chưa có điểm
SELECT DISTINCT MH.MAMH, MH.TENMH
FROM MONHOC MH
JOIN DIEMSV DS ON MH.MAMH = DS.MAMH
WHERE DS.DIEM IS NULL
GO

-- 11. Liệt kê thông tin SV có mã số 170001: MSSV, HoTen, TenMH, Diem
SELECT SV.MSSV, SV.HOTEN, MH.TENMH, DS.DIEM
FROM SINHVIEN SV
JOIN DIEMSV DS ON SV.MSSV = DS.MSSV
JOIN MONHOC MH ON DS.MAMH = MH.MAMH
WHERE SV.MSSV = '170001'
GO

-- 12. Liệt kê tên sinh viên và mã môn học mà SV đó đăng ký với điểm trên 7
SELECT SV.HOTEN, DS.MAMH
FROM SINHVIEN SV
JOIN DIEMSV DS ON SV.MSSV = DS.MSSV
WHERE DS.DIEM > 7
GO

-- 13. Liệt kê tên môn học cùng số lượng SV đã học và đã có điểm
SELECT MH.TENMH, COUNT(DS.MSSV) AS SOLUONG_SV
FROM MONHOC MH
JOIN DIEMSV DS ON MH.MAMH = DS.MAMH
WHERE DS.DIEM IS NOT NULL
GROUP BY MH.TENMH
GO

-- 14. Liệt kê tên SV và điểm trung bình của SV đó
SELECT SV.HOTEN, AVG(ISNULL(DS.DIEM, 0)) AS DIEM_TB
FROM SINHVIEN SV
LEFT JOIN DIEMSV DS ON SV.MSSV = DS.MSSV
GROUP BY SV.HOTEN
GO

-- 15. Liệt kê tên sinh viên đạt điểm cao nhất của môn học "Kỹ thuật lập trình"
SELECT SV.HOTEN
FROM SINHVIEN SV
JOIN DIEMSV DS ON SV.MSSV = DS.MSSV
JOIN MONHOC MH ON DS.MAMH = MH.MAMH
WHERE MH.TENMH = N'Kỹ thuật lập trình'
AND DS.DIEM = (SELECT MAX(DIEM) FROM DIEMSV WHERE MAMH = 'COS201')
GO

-- 16. Liệt kê tên SV có điểm trung bình cao nhất
SELECT SV.HOTEN, AVG(ISNULL(DS.DIEM, 0)) AS DIEM_TB
FROM SINHVIEN SV
LEFT JOIN DIEMSV DS ON SV.MSSV = DS.MSSV
GROUP BY SV.HOTEN
HAVING AVG(ISNULL(DS.DIEM, 0)) = (
    SELECT MAX(DTB)
    FROM (
        SELECT AVG(ISNULL(DIEM, 0)) AS DTB
        FROM DIEMSV
        GROUP BY MSSV
    ) AS Temp
)
GO

-- 17. Liệt kê tên SV chưa học môn "Toán Rời Rạc"
SELECT SV.HOTEN
FROM SINHVIEN SV
WHERE NOT EXISTS (
    SELECT 1
    FROM DIEMSV DS
    JOIN MONHOC MH ON DS.MAMH = MH.MAMH
    WHERE DS.MSSV = SV.MSSV AND MH.TENMH = N'Toán Rời Rạc'
)
GO

-- 18. Cho biết sinh viên có năm sinh cùng với sinh viên tên "Danh"
SELECT SV.HOTEN, SV.NTNS
FROM SINHVIEN SV
WHERE YEAR(SV.NTNS) = (
    SELECT YEAR(NTNS)
    FROM SINHVIEN
    WHERE HOTEN LIKE N'%Danh'
)
GO

-- 19. Cho biết tổng sinh viên và tổng số sinh viên nữ
SELECT 
    COUNT(*) AS TONG_SV, 
    SUM(CASE WHEN PHAI = 0 THEN 1 ELSE 0 END) AS TONG_SV_NU
FROM SINHVIEN
GO

-- 20. Cho biết danh sách các sinh viên rớt ít nhất 1 môn 
SELECT DISTINCT SV.HOTEN          
FROM SINHVIEN SV
JOIN DIEMSV DS ON SV.MSSV = DS.MSSV
WHERE DS.DIEM < 4
GO

-- 21. Cho biết MSSV, Họ tên SV đã học và có điểm ít nhất 3 môn
SELECT SV.MSSV, SV.HOTEN
FROM SINHVIEN SV
JOIN DIEMSV DS ON SV.MSSV = DS.MSSV
WHERE DS.DIEM IS NOT NULL
GROUP BY SV.MSSV, SV.HOTEN
HAVING COUNT(*) >= 3
GO